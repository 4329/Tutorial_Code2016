// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// C++ from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


#include "Shoot.h"

// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTOR

Shoot::Shoot(): Command() {
        // Use requires() here to declare subsystem dependencies
    // eg. requires(chassis);
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
	Requires(Robot::shooter.get());
    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
	static bool shot = false;
}
// END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTOR

// Called just before this Command runs the first time
void Shoot::Initialize() {
	Robot::timer->Reset();	//sets timer to 0
}

// Called repeatedly when this Command is scheduled to run
void Shoot::Execute() {
	if (shot == false) {	//do this once at the start of the command
		Robot::timer->Start();
		Robot::shooter->Shoot();
		shot = true;
	}
}

// Make this return true when this Command no longer needs to run execute()
bool Shoot::IsFinished() {
    if (Robot::timer->Get() > 1) {	//if 1 second has passed end command
    	return true;
    }
    else { return false; }
}

// Called once after isFinished returns true
void Shoot::End() {
	Robot::timer->Stop();
	Robot::shooter->Retract();	//deactivates the pnuematic cylinder after a second has passed
	shot = false;
}

// Called when another command which requires one or more of the same
// subsystems is scheduled to run
void Shoot::Interrupted() {

}
